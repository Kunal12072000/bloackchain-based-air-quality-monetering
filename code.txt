#include <stdio.h>
#include <string.h> 
#include <errno.h>
#include<wiringPi.h>


#define	Clock	27
#define	DataIn	28
#define	DataOut	29


#define    Wait1us        delayMicroseconds(1);
#define    Wait2us        delayMicroseconds(2);
#define    Wait4us        {Wait2us;Wait2us;}
#define    Wait8us        {Wait4us;Wait4us;}
#define    Wait10us  {Wait8us;Wait2us;}

unsigned int ADCSelChannel(unsigned char Channel)
{
	unsigned int ConvertValue;
	unsigned char i, Chan;
	unsigned char ConvertValueL, ConvertValueH;
	unsigned char delay;
 
 	ConvertValueL = ConvertValueH = 0;
 	delay = 0;
		digitalWrite(Clock ,0);
		Wait2us;
		Wait2us;
		Channel = Channel << 4;
		for (i = 0; i < 4; i ++) 
		{
			Chan = Channel;
			Chan = Chan >> 7;
			digitalWrite(DataIn,Chan & 0x01);
			Wait2us;
			digitalWrite(Clock ,1);
			digitalWrite(Clock ,0);
			Channel = Channel << 1;
		}
		for (i = 0; i < 6;i ++) 
		{
			digitalWrite(Clock ,1);
			digitalWrite(Clock ,0);
		}
		{
			Wait10us;Wait10us;Wait10us;Wait10us;Wait10us;
			Wait10us;Wait10us;Wait10us;Wait10us;Wait10us;
		}
		{
			Wait10us;
			digitalWrite(Clock ,0);
			Wait1us;
			Wait1us;
			for (i = 0; i < 2; i ++) //��ȡ�߶�λbitֵ
			{
				digitalWrite(Clock ,1);
				ConvertValueH <<= 1;
				if (digitalRead(DataOut))
				ConvertValueH |= 0x1;
				digitalWrite(Clock ,0);
				Wait1us;
			} 
			for (i = 0; i < 8; i ++)
			{
				digitalWrite(Clock ,1);
				ConvertValueL <<= 1;
				if (digitalRead(DataOut))
				ConvertValueL |= 0x1;
				digitalWrite(Clock ,0);
				Wait1us;
			} 
			ConvertValue = ConvertValueH;
			ConvertValue <<= 8;
			ConvertValue |= ConvertValueL;
			return ConvertValue;		}
}


int main(){
	unsigned int re;
	unsigned char d1;
  
if (wiringPiSetup() < 0)
{
    fprintf (stderr, "Unable to open serial device: %s\n", strerror (errno)) ;
    return 1 ;
}

pinMode (DataOut,INPUT);
pullUpDnControl(DataOut, PUD_UP);

pinMode (Clock,OUTPUT);
pinMode (DataIn,OUTPUT);


while(1)
{
  printf("Output in ppm : %d",&d1);
  re=ADCSelChannel(6);
  d1=re
  delay (100);
  }

}